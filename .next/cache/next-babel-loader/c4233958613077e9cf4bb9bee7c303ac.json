{"ast":null,"code":"import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport { Link } from '../../routes';\n\nclass campaignShow extends Component {\n  // fetching the summary first\n  static async getInitialProps(props) {\n    // getting address out of url\n    const campaign = Campaign(props.query.address); // console.log(props.query.address);\n\n    const summary = await campaign.methods.getSummary().call(); // console.log(summary);\n\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      requestsCount,\n      minimumContribution,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      style: {\n        overflowWrap: 'break-word'\n      },\n      description: 'Manager created this campaign and can create requests to withdraw funds'\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution(wei)',\n      description: 'You must contribute atleast this much to become an approver'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Request',\n      description: 'A request is created by manager to withdraw funds from contract.Requests must be approved by withdrawers'\n    }, {\n      header: approversCount,\n      meta: 'NUmber of approvers',\n      description: 'Number of people who have already donated to this campaign/contract'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend'\n    }];\n    return React.createElement(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return React.createElement(Layout, null, React.createElement(\"h3\", null, \"Campaign Show\"), React.createElement(Grid, null, React.createElement(Grid.Row, null, React.createElement(Grid.Column, {\n      width: 10\n    }, this.renderCards(), React.createElement(Grid.Row, null, React.createElement(Grid.Column, null, React.createElement(Link, {\n      route: `/campaigns/${this.props.address}/requests`\n    }, React.createElement(\"a\", null, React.createElement(Button, {\n      primary: true\n    }, \"View Requests\")))))), React.createElement(Grid.Column, {\n      width: 6\n    }, React.createElement(ContributeForm, {\n      address: this.props.address\n    })))));\n  }\n\n}\n\nexport default campaignShow;","map":{"version":3,"sources":["/home/abhishek/kickstarter_bc/kickstarter_blockchain/crowdfund-dapp/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","web3","ContributeForm","Link","campaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","style","overflowWrap","description","utils","fromWei","render"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card,Grid,Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport { Link } from '../../routes';\n\nclass campaignShow extends Component {\n    // fetching the summary first\n    static async getInitialProps(props) {\n        // getting address out of url\n        const campaign = Campaign(props.query.address);\n        // console.log(props.query.address);\n        const summary = await campaign.methods.getSummary().call();\n        // console.log(summary);\n        return { \n            address:props.query.address,\n            minimumContribution: summary[0],            \n            balance: summary[1],\n            requestsCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n         };\n    }\n\n    renderCards() {\n        const {\n            \n            balance,\n            manager,\n            requestsCount,\n            minimumContribution,\n            approversCount\n        }= this.props;\n        const items = [\n            {\n                header: manager,\n                meta: 'Address of Manager',\n                style: { overflowWrap: 'break-word' },\n                description:'Manager created this campaign and can create requests to withdraw funds'\n            },\n            {\n                header:minimumContribution,\n                meta:'Minimum Contribution(wei)',\n                description:'You must contribute atleast this much to become an approver'\n            },\n            {\n                header:requestsCount,\n                meta:'Number of Request',\n                description:'A request is created by manager to withdraw funds from contract.Requests must be approved by withdrawers'\n            },\n            {\n                header:approversCount,\n                meta:'NUmber of approvers',\n                description:'Number of people who have already donated to this campaign/contract'\n            },\n            {\n                header:web3.utils.fromWei(balance,'ether'),\n                meta:'Campaign balance (ether)',\n                description:'The balance is how much money this campaign has left to spend'\n            }\n            \n            \n            \n        ];\n        return <Card.Group items={items} />;\n    }\n    \n    \n    render() {\n        return (\n            <Layout>\n                <h3>Campaign Show</h3>\n                <Grid>\n                    <Grid.Row>\n\n                    \n                    <Grid.Column width={10}>\n                    {this.renderCards()}\n                    <Grid.Row>\n                        <Grid.Column>\n                        <Link route={`/campaigns/${this.props.address}/requests`}>\n                            <a>\n                                <Button primary>\n                                    View Requests\n                                </Button>\n                            </a>\n                        </Link>\n                        </Grid.Column>\n                    </Grid.Row>\n                    \n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                    <ContributeForm address={this.props.address} />        \n                    </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                \n                \n            </Layout>\n            \n        );\n    }\n}\nexport default campaignShow;"]},"metadata":{},"sourceType":"module"}