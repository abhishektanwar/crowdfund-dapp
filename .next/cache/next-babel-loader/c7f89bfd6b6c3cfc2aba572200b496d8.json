{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport factory from '../../ethereum/factory';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Create a Campaign\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, React.createElement(Form.Field, null, React.createElement(\"label\", null, \"Minimum Contribution\"), React.createElement(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContribution,\n      onChange: event => this.setState({\n        minimumContribution: event.target.value\n      })\n    })), React.createElement(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), React.createElement(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create Campaign\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/home/abhishek/kickstarter_bc/kickstarter_blockchain/crowdfund-dapp/pages/campaigns/new.js"],"names":["React","Component","Layout","Button","Form","Input","Message","web3","factory","Router","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createCampaign","state","send","from","pushRoute","error","message","render","onSubmit","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,MAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA4C,mBAA5C;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAExB;AACJU,MAAAA,mBAAmB,EAAE,EADjB;AAEJC,MAAAA,YAAY,EAAC,EAFT;AAGJC,MAAAA,OAAO,EAAC;AAHJ,KAFwB;;AAAA,sCAQrB,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC,IAAT;AAAgBD,QAAAA,YAAY,EAAC;AAA7B,OAAd;;AACA,UAAI;AACA,cAAMK,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMX,OAAO,CAACY,OAAR,CACDC,cADC,CACc,KAAKC,KAAL,CAAWX,mBADzB,EAEDY,IAFC,CAEI;AAACC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAf,SAFJ,CAAN;AAKJR,QAAAA,MAAM,CAACgB,SAAP,CAAiB,GAAjB;AACC,OARD,CAQE,OAAOC,KAAP,EAAc;AACZ,aAAKV,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAACc,KAAK,CAACC;AAArB,SAAd;AACH;;AACD,WAAKX,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KAvB+B;AAAA;;AAyBhCe,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD,QACI,oDADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAI,KAAKC,QAAvB;AAAiC,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWV;AAArD,OACI,oBAAC,IAAD,CAAM,KAAN,QACI,0DADJ,EAEI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,KADV;AAEI,MAAA,aAAa,EAAC,OAFlB;AAGI,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,mBAHtB;AAII,MAAA,QAAQ,EAAIG,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEL,QAAAA,mBAAmB,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAApC,OAAd;AAJzB,MAFJ,CADJ,EAUI,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWV;AAAlD,MAVJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAG,KAAKU,KAAL,CAAWT,OAA7B;AAAuC,MAAA,OAAO;AAA9C,yBAXJ,CAFJ,CADJ;AAkBH;;AA5C+B;;AA+CpC,eAAeH,WAAf","sourcesContent":["import React,{ Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Button,Form ,Input, Message } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport factory from '../../ethereum/factory';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n\n    state = {\n        minimumContribution: '',\n        errorMessage:'',\n        loading:false\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        this.setState({loading:true , errorMessage:''});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods\n                .createCampaign(this.state.minimumContribution)\n                .send({from: accounts[0]\n\n            });\n        Router.pushRoute('/');\n        } catch (error) {\n            this.setState({ errorMessage:error.message });\n        }\n        this.setState({loading:false});\n    };\n\n    render() {\n        return (\n            <Layout>\n                <h1>Create a Campaign</h1>\n                <Form onSubmit = {this.onSubmit} error={!!this.state.errorMessage}>\n                    <Form.Field>\n                        <label>Minimum Contribution</label>\n                        <Input \n                            label=\"wei\" \n                            labelPosition=\"right\" \n                            value={this.state.minimumContribution}\n                            onChange = {event => this.setState({ minimumContribution: event.target.value })}\n                            />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage}></Message>\n                    <Button loading={ this.state.loading } primary>Create Campaign</Button>\n                </Form>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignNew;"]},"metadata":{},"sourceType":"module"}