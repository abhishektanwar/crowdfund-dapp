{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Table, Tab, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nimport { Router } from '../routes';\nimport { timingSafeEqual } from 'crypto';\nimport { request } from 'https';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      loading_finalize: false\n    });\n\n    _defineProperty(this, \"onApprove\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const campaign = Campaign(this.props.address);\n        await campaign.methods.approveRequest(this.props.id).send({\n          from: accounts[0]\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n      } catch (error) {}\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading_finalize: true\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const campaign = Campaign(this.props.address);\n        await campaign.methods.finalizeRequest(this.props.id).send({\n          from: accounts[0]\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n      } catch (error) {}\n\n      this.setState({\n        loading_finalize: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    return React.createElement(Row, null, React.createElement(Cell, null, this.props.id), React.createElement(Cell, null, this.props.request.description), React.createElement(Cell, null, web3.utils.fromWei(this.props.request.value, 'ether')), React.createElement(Cell, null, this.props.request.recipient), React.createElement(Cell, null, this.props.request.approvalcount, \"/\", this.props.approversCount), this.props.request.complete ? null : React.createElement(Cell, null, React.createElement(Button, {\n      loading: this.state.loading,\n      onClick: this.onApprove\n    }, \"Approve\")), React.createElement(Cell, null, React.createElement(Button, {\n      loading_finalize: this.state.loading_finalize,\n      onClick: this.onFinalize\n    }, \"Finalize Request\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/home/abhishek/kickstarter_bc/kickstarter_blockchain/crowdfund-dapp/components/RequestRow.js"],"names":["React","Component","Table","Tab","Button","web3","Campaign","Router","timingSafeEqual","request","RequestRow","loading","loading_finalize","event","preventDefault","setState","accounts","eth","getAccounts","campaign","props","address","methods","approveRequest","id","send","from","replaceRoute","error","finalizeRequest","render","Row","Cell","description","utils","fromWei","value","recipient","approvalcount","approversCount","complete","state","onApprove","onFinalize"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport { Table, Tab , Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nimport {Router} from '../routes';\nimport { timingSafeEqual } from 'crypto';\nimport { request } from 'https';\nclass RequestRow extends Component {\n\n    state={loading:false,loading_finalize:false};\n\n    onApprove = async (event) =>{\n        event.preventDefault();\n        this.setState({loading:true});\n        try {\n            \n            const accounts = await web3.eth.getAccounts();\n            const campaign = Campaign(this.props.address);\n            await campaign.methods.approveRequest(this.props.id).send({\n                from:accounts[0]\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n        } catch (error) {\n            \n        }\n        this.setState({loading:false});\n        \n    };\n\n    onFinalize = async (event) =>{\n        event.preventDefault();\n        this.setState({loading_finalize:true});\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const campaign = Campaign(this.props.address);\n            await campaign.methods.finalizeRequest(this.props.id).send({\n                from:accounts[0]\n            });\n            Router.replaceRoute(`/campaigns/${this.props.address}/requests`);\n        } catch (error) {\n            \n        }\n        this.setState({loading_finalize:false});\n    };\n\n    render(){\n        const { Row,Cell } = Table;\n        \n        return(\n            <Row>\n                <Cell>{this.props.id}</Cell>\n                <Cell>{this.props.request.description}</Cell>\n                <Cell>{web3.utils.fromWei(this.props.request.value,'ether')}</Cell>\n                <Cell>{this.props.request.recipient}</Cell>\n                <Cell>{this.props.request.approvalcount}/{this.props.approversCount}</Cell>\n                { this.props.request.complete ? null : (\n                    <Cell><Button loading={this.state.loading} onClick={this.onApprove}>Approve</Button></Cell>\n                )\n                    \n                }\n                \n                \n                <Cell><Button loading_finalize={this.state.loading_finalize} onClick={this.onFinalize} >Finalize Request</Button></Cell>\n            \n            </Row>\n        );\n    }\n}\n\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}